Syncronisation:

1. Hardware.
2. Timer proc.

1. As with hardware, we are unable to know exact parameters for each piece
of hardware in the world. However, we can calculate and estimate some of
the parameters. This will require use of timer though, so its better to
completely rely upon timer routines as well-known and predictable method.

2. We set up timer frequency to 250 ticks per second.
We calculate number of sampels per one tick, depending on mixrate.

// the integer tick length
tick_length = mixrate / TICKS_PER_SECOND;
// the fractional tick length (tick adjust)
tick_step = mixrate % TICKS_PER_SECOND;
// if tick_frac > tick_gate then trigger
tick_gate = 250; // TICKS_PER_SECOND ??

EXAMPLES EXPLAINING THE MATH
****************************
E.g. mixrate 44100 gives us 176.4 sampels per tick.
44100/250 = 176.4 (trigger 4 times per 10 ticks)
44100%250 = 100
250%100 == 50 => trigger = 44100%250 * 250/100 = 200 + 50 = 250;

step 100, trigger on 250

100     tick1
200     tick2
300     tick3  => trigger, 300-250 = 50
150     tick4
250     tick5  => trigger, 250-250 = 0
100     tick6
200     tick7
300     tick8  => trigger, 300-250 = 50
150     tick9
250     tick10 => trigger, 250-250 = 0
(as requested, 4 times per 10 ticks)

****************************
e.g. mixrate 11025 -
11025/250 = 44.1 (trigger once per 10 ticks)
11025%250 = 25
250%25 == 0 => trigger = 11025%250 * 250/25 = 250;

step 25, trigger on 250

25     tick1
50     tick2
75     tick3
100    tick4
125    tick5
150    tick6
175    tick7
200    tick8
225    tick9
250    tick10 => trigger
(as requested, 1 time per 10 ticks)

****************************
